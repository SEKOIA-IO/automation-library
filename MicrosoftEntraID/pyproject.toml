[tool.poetry]
name = "Azure Active Directory"
description = ""
version = "0.0"
authors = []
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
azure-identity = "^1.23.1"
pydantic = "2.10"
sekoia-automation-sdk = "^1.21.0"
msgraph-sdk = "^1.45.0"
cachetools = "^6.2.0"

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-cov = "*"
pytest-asyncio = "*"
requests-mock = "*"
black = { version = "^22.6.0", allow-prereleases = true }
flake8 = "^4.0.1"
mypy = "^1.11.2"
pytest-clarity = "^1.0.1"
Faker = "^13.12.0"

[build-system]
requires = [ "poetry-core>=1.0.0",]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 119

[tool.mypy]
strict = false # TODO: enable strict mode later and add type hints everywhere
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_return_any = true
exclude = ["tests/*"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]
# TODO: enable warnings filtering when warnings are fixed
#filterwarnings = [
#    "error",
#    "ignore::DeprecationWarning",
#    "ignore:.*unclosed.*:ResourceWarning",
#]
addopts = '''
  --strict-markers
  --tb=short
  --cov=graph_api
  --cov=azure_ad
  --cov-branch
  --cache-clear
  --cov-report=html
  --cov-report=term-missing:skip-covered
  --cov-fail-under=5
  --asyncio-mode=auto
'''

[tool.coverage.run]
omit = [
    "tests/*",
    "main.py",
]
