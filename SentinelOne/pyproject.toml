[tool.poetry]
name = "Automation Module for SentinelOne"
description = ""
version = "0.0"
authors = []
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
sekoia-automation-sdk = { extras = ["all"], version = "^1.13.0" }
orjson = "^3.7.7"
sentinelone-management-sdk = { path = "sentinel-mgmt-sdk.tar.gz" }
confluent-kafka = "^2.1.1"
certifi = "^2023.7.22"
protobuf = "^4.21.9"
structlog = "^24.4.0"
stix2-patterns = "^2.0.0"
pandas = "^2.2.2"
cachetools = "^5.4.0"
gql = { extras = ["aiohttp"], version = "^3.5.0" }
aiolimiter = "^1.1.0"

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-cov = "*"
pytest-asyncio = "*"
pytest-xdist = "*"
pytest-env = "*"
pytest-flake8 = "*"
pytest-aiohttp = "*"
requests = "*"
requests-mock = "*"
freezegun = "*"
isort = "^5.10.1"
black = { version = "^24.3.0", extras = ["colorama"] }
mypy = "^0.991"

[build-system]
requires = [ "poetry-core>=1.0.0",]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 119

[tool.mypy]
strict = false
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_return_any = true
exclude = ["tests/*", "resources/*", "main.py"]

[tool.pytest.ini_options]
minversion = "6.0"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
addopts = '''
  --strict-markers
  --tb=short
  --cov=sentinelone_module
  --cov-branch
  --cache-clear
  --cov-report=html
  --cov-report=term-missing:skip-covered
  --cov-fail-under=5
  --numprocesses=auto
  --asyncio-mode=auto
  --capture=sys
'''

[tool.coverage.run]
omit = [
    "tests/*",
    "main.py",
    "sentinelone_module/deep_visibility/*_pb2.py",
]
