name: postSearchCertificates
pipeline:
- name: http
- name: output
stages:
  http:
    kind: http
    properties:
      method: POST
      url: '{{inputs.base_url}}/v2/certificates/search'
      auth:
        basic:
          username: '{{inputs.username}}'
          password: '{{inputs.password}}'
    asserts:
      error_400:
        predicate: '{{response.status_code != 400}}'
        fail: Bad Request.
      error_401:
        predicate: '{{response.status_code != 401}}'
        fail: You must authenticate with a valid API ID and secret.
      error_422:
        predicate: '{{response.status_code != 422}}'
        fail: Invalid cursor.
      error_429:
        predicate: '{{response.status_code != 429}}'
        fail: Too many requests.
      success:
        predicate: '{{response.status_code == 200}}'
        fail: Expected a successful (2xx) status code, got {{response.status_code}}
    captures:
      result: '{{response.json}}'
  output:
    kind: output
    properties:
      result: '{{http.result}}'
description: "Accepts queries for certificate attributes provided in the Censys Search\
  \ Language and returns a list of matching certificates with some summary fields.\
  \ \n\n **Cursor Pagination** \n\n Search endpoints rely on using cursors for efficient\
  \ pagination. \n\n Each search result may return a `next` and `prev` cursor value\
  \ which can be used to fetch additional pages of results. \n\n ```json \n{\n\t\"\
  links\":{ \n\t\t\"prev\":\"prevCursorToken\", \n\t\t\"next\":\"nextCursorToken\"\
  \ \n\t}, \n\t[Rest of Response]\n} \n ``` \n The returned cursor token values can\
  \ be added to the search endpoint as a `cursor` parameter to fetch either the next\
  \ page of results or the previous page. \n\n The entire set of results can be iterated\
  \ page-by-page using returned cursors. If no cursor is given, the first page will\
  \ be returned."
inputs:
  per_page:
    type: integer
    description: The maximum number of hits to return in each response (minimum of
      1, maximum of 100).
  fields:
    type: string
    description: Comma separated list of up to 25 fields to be returned for each result.
      (This parameter is only available to paid users.)
  password:
    type: string
    description: The password for basic authentication
    default: '{{password}}'
  q:
    type: string
    description: Query used to search for hosts with matching attributes. Uses the
      Censys Search Language.
  base_url:
    type: string
    description: Base URL for the API
    enum:
    - https://search.censys.io/api
  sort:
    type: string
    description: Sort the results
  cursor:
    type: string
    description: Cursor token from the API response, which fetches the next or previous
      page of hits when added to the endpoint URL.
  username:
    type: string
    description: The username for basic authentication
    default: '{{username}}'
