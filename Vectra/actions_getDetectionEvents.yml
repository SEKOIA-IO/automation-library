name: getDetectionEvents
pipeline:
- name: http
- name: output
stages:
  http:
    kind: http
    properties:
      method: GET
      url: '{{inputs.base_url}}/events/detections'
      auth:
        oauth2:
          token_url: https://{{inputs.vectra_portal_url}}/oauth2/token
          client_credentials:
            client_id: '{{inputs.client_id}}'
            client_secret: '{{inputs.client_secret}}'
          scopes: []
      params:
        from: '{{inputs.from}}'
        limit: '{{inputs.limit}}'
        event_timestamp_gte: '{{inputs.event_timestamp_gte}}'
        event_timestamp_lte: '{{inputs.event_timestamp_lte}}'
        entity_type: '{{inputs.entity_type}}'
        detection_id: '{{inputs.detection_id}}'
        ordering: '{{inputs.ordering}}'
    asserts:
      success:
        predicate: '{{response.status_code == 200}}'
        fail: Expected a successful (2xx) status code, got {{response.status_code}}
    captures:
      result: '{{response.json}}'
  output:
    kind: output
    properties:
      result: '{{http.result}}'
inputs:
  entity_type:
    type: string
    description: Type of the related entity ("account" or "host")
  client_secret:
    type: string
    description: The client secret for OAuth2 client credentials flow
    default: '{{client_secret}}'
  vectra_portal_url:
    type: string
    default: platform.vectra.ai
  ordering:
    type: string
    description: Specifies the order of results, e.g., by urgency_score, last timestamp,
      or last_modified_timestamp
  from:
    type: integer
    description: Starting checkpoint for filtering scoring events
  detection_id:
    type: integer
    description: Unique ID for the detection
  event_timestamp_lte:
    type: string
    description: End date/time for scoring events (inclusive, ISO-8601 format)
  client_id:
    type: string
    description: The client ID for OAuth2 client credentials flow
    default: '{{client_id}}'
  limit:
    type: integer
    description: Maximum number of events to return, with a default of 500 if unspecified
  base_url:
    type: string
    description: Base URL for the API
    enum:
    - https://{{inputs.vectra_portal_url}}/api/v3.3
  event_timestamp_gte:
    type: string
    description: Start date/time for scoring events (inclusive, ISO-8601 format)
